service: product-service
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1

  environment:
    PG_HOST: 
    PG_PORT: 
    PG_DATABASE: 
    PG_USERNAME: 
    PG_PASSWORD: 
    SNS_ARN:
      Ref: SNSTopic
  
  iamRoleStatements:
    - Effect: "Allow"
      Action: "sqs:*"
      Resource:
        - Fn::GetAtt: [ SQSQueue, Arn ]
    - Effect: "Allow"
      Action: "sns:*"
      Resource:
        Ref: SNSTopic

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'config/webpack.config.js'
    includeModules: true

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    SNSTopic:
      Type: "AWS::SNS::Topic"
      Properties:
        TopicName: "createProductTopic"
    SNSSubscription1:
      Type: "AWS::SNS::Subscription"
      Properties:
        Endpoint: "meison98113@gmail.com"
        Protocol: email
        TopicArn:
          Ref: SNSTopic
  Outputs:
    ExportCatalogItemsQueueUrl:
      Value:
        Ref: SQSQueue
      Export:
        Name: ExportCatalogItemsQueueUrl
    ExportCatalogItemsQueueArn:
      Value:
        Fn::GetAtt: [SQSQueue, Arn]
      Export:
        Name: ExportCatalogItemsQueueArn

functions:
  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: products/{productId}
          method: get
          cors: true
          request: 
            parameters: 
              paths: 
                productId: true
  getAllProducts:
    handler: handler.getAllProducts
    events:
      - http:
          path: products
          method: get
  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: products
          method: put
          cors: true
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn